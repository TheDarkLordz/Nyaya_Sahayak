// This file is generated by Firebase Genkit.
'use server';

/**
 * @fileOverview A flow that suggests relevant Indian laws based on a user's legal question.
 *
 * - suggestRelevantLaws - A function that suggests relevant laws.
 * - SuggestRelevantLawsInput - The input type for the suggestRelevantLaws function.
 * - SuggestRelevantLawsOutput - The return type for the suggestRelevantLaws function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestRelevantLawsInputSchema = z.object({
  legalQuestion: z
    .string()
    .describe('The legal question in natural language.'),
});
export type SuggestRelevantLawsInput = z.infer<
  typeof SuggestRelevantLawsInputSchema
>;

const SuggestRelevantLawsOutputSchema = z.object({
  suggestedLaws: z
    .array(z.string())
    .describe('A list of potentially relevant Indian laws.'),
});
export type SuggestRelevantLawsOutput = z.infer<
  typeof SuggestRelevantLawsOutputSchema
>;

export async function suggestRelevantLaws(
  input: SuggestRelevantLawsInput
): Promise<SuggestRelevantLawsOutput> {
  return suggestRelevantLawsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestRelevantLawsPrompt',
  input: {schema: SuggestRelevantLawsInputSchema},
  output: {schema: SuggestRelevantLawsOutputSchema},
  prompt: `You are an AI legal assistant specializing in Indian law.

  Based on the user's legal question, suggest a list of potentially relevant Indian laws.

  Question: {{{legalQuestion}}}

  Please provide the output as a JSON array of strings.`,
});

const suggestRelevantLawsFlow = ai.defineFlow(
  {
    name: 'suggestRelevantLawsFlow',
    inputSchema: SuggestRelevantLawsInputSchema,
    outputSchema: SuggestRelevantLawsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
